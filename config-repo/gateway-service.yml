server:
  port: 8079

spring:
  main:
    web-application-type: reactive

  cloud:
    gateway:
      default-filters:
        - AddRequestHeader=X-Gateway-Request, true
        - RemoveResponseHeader=Server
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: user-route
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: userCircuitBreaker
                fallbackUri: forward:/fallback/users

        - id: notification-route
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/api/mail/**
          filters:
            - name: CircuitBreaker
              args:
                name: notificationCircuitBreaker
                fallbackUri: forward:/fallback/mail

resilience4j:
  circuitbreaker:
    instances:
      userCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s

      notificationCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: gateway, health, info, metrics, env, loggers
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true